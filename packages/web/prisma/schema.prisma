generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
  output          = "./client"
  binaryTargets   = ["native", "debian-openssl-1.1.x"]
}

generator json {
  provider  = "prisma-json-types-generator"
  namespace = "PrismaJson"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum FoodType {
  MEET
  VEGETABLE
  FRUIT
  SEAFOOD
  OTHER
}

model Cookbook {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamptz(6)

  name  String
  items CookbookItem[]

}

model CookbookItem {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamptz(6)

  cookbook   Cookbook @relation(fields: [cookbookId], references: [id], onDelete: Cascade)
  cookbookId Int

  food     Food @relation(fields: [foodId], references: [id], onDelete: Cascade)
  foodId   Int
  quantity Int  @default(0)
}

model Food {
  id           Int            @id @default(autoincrement())
  created_at   DateTime       @default(now()) @db.Timestamptz(6)
  updated_at   DateTime       @default(now()) @updatedAt @db.Timestamptz(6)
  name         String
  type         FoodType       @default(OTHER)
  unit         String         @default("g")
  cookbookItem CookbookItem[]
}
